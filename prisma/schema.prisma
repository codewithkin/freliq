generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ────────────────
// 🔑 User Models
// ────────────────
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      String   @default("FREELANCER") // "FREELANCER" or "CLIENT"
  createdAt DateTime @default(now())

  // Relations
  projects Project[] @relation("ProjectMembers") // Projects they're part of
  tasks    Task[] // Tasks they've created
  comments Comment[]
  files    File[]
  Project  Project[]

  @@index([email])
  @@index([role])
}

// ────────────────
// 🏗️ Project (Shared Workspace)
// ────────────────
model Project {
  id          String    @id @default(uuid())
  title       String
  description String?
  status      String    @default("ACTIVE") // "ACTIVE", "COMPLETED", "PAUSED"
  deadline    DateTime?
  createdAt   DateTime  @default(now())

  // Who owns this project (always a freelancer/agency)
  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  // All participants (freelancer + client)
  members User[] @relation("ProjectMembers")
  tasks   Task[] // Breakdown of work
  files   File[] // Shared documents/screenshots

  @@index([ownerId])
  @@index([status])
}

// ────────────────
// ✅ Task (Progress Tracking)
// ────────────────
model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  status      String   @default("TODO") // "TODO", "IN_PROGRESS", "DONE"
  proof       String? // Screenshot/Video URL (Cloudflare R2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Who created the task (freelancer or client)
  creatorId String
  creator   User   @relation(fields: [creatorId], references: [id])

  // Which project this belongs to
  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  // Comments/discussion
  comments Comment[]

  @@index([projectId])
  @@index([status])
  @@index([creatorId])
}

// ────────────────
// 💬 Comment (Discussion)
// ────────────────
model Comment {
  id        String   @id @default(uuid())
  content   String
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  taskId    String
  task      Task     @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())

  @@index([taskId])
  @@index([authorId])
}

// ────────────────
// 📁 File (Proof/Assets)
// ────────────────
model File {
  id         String   @id @default(uuid())
  url        String // Cloudflare R2 URL
  type       String // "IMAGE", "DOCUMENT", etc.
  uploadedAt DateTime @default(now())

  // Who uploaded it
  uploaderId String
  uploader   User   @relation(fields: [uploaderId], references: [id])

  // Project it belongs to
  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  @@index([projectId])
  @@index([uploaderId])
}
